logging:
  level.root: WARN
  level.no: ${LOG_LEVEL:DEBUG}
  level.org.springframework: INFO
  level.org.springframework.web: INFO
  level.org.springframework.data.elasticsearch.core: ${LOG_LEVEL:INFO}
  level.org.opensaml: INFO
application:
  organizationCatalogueUrl: ${ORGANIZATION_CATALOGUE_URL:https://organization-catalogue:8080}
  themesServiceUrl: http://reference-data:8080
  catalogUriPrefix: http://localhost:8099
  harvesterUsername: ${registrationApi_harvesterUsername:test_admin}
  harvesterPassword: ${registrationApi_harvesterPassword:password}
  harvesterUrl: http://fdk-dataset-harvester-gui:8080
  openDataEnhet: https://data.brreg.no/enhetsregisteret/api/enheter/
  openDataEnhetProxy: ${ENHETSREGISTERET_PROXY_URL:http://fdk-nginx-enhetsregisteret-proxy:8080/enhetsregisteret/api/enheter/}
  apiRootUrl: http://fdk-nginx-search:8080/api
  # harvest every sixth hour
  harvestCron: 0 0 */6 * * *

spring:
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
    template:
      routing-key: 'dataset.publisher.HarvestTrigger'
      exchange: 'harvests'
  jackson:
    default-property-inclusion: non_null
  hateoas:
    use-hal-as-default-json-media-type: false
  data:
    elasticsearch:
      clusterNodes: ${FDK_ES_CLUSTERNODES:elasticsearch5:9300}
      clusterName: ${FDK_ES_CLUSTERNAME:elasticsearch}

security:
  oauth2:
    resource:
      id: fdk-registration-api
      jwk.key-set-uri: ${JWK_KEY_SET_URI:http://sso:8084/auth/realms/fdk/protocol/openid-connect/certs}

server:
  tomcat:
    accesslog:
      enabled: true
    basedir: /tmp/fdk

---
spring:
  profiles: develop
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
  data:
    elasticsearch:
      clusterNodes: localhost:9300
      clusterName: elasticsearch
server:
  port: 8114
application:
  organizationCatalogueUrl: http://localhost:8140
  harvesterUrl: http://localhost:8082
  apiRootUrl: http://localhost:8112/api
  openDataEnhetProxy: http://localhost:8132/enhetsregisteret/api/enheter/ #mock

security:
  oauth2:
    resource:
      id: registration-api
      jwk.key-set-uri: http://localhost:8084/jwk
---
spring:
  profiles: unit-integration
  data:
    elasticsearch:
      clusterNodes: localhost:9399
      clusterName: elasticsearch
      properties:
        http:
          enabled: true
application:
  themesServiceUrl: http://localhost:8100
  harvesterUrl: http://localhost:8082

